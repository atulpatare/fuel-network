/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

interface CounterAbiInterface extends Interface {
  functions: {
    count: FunctionFragment;
    increment: FunctionFragment;
    increment_custom: FunctionFragment;
    decrement: FunctionFragment;
    decrement_custom: FunctionFragment;
  };

  encodeFunctionData(functionFragment: "count", values?: undefined): Uint8Array;
  encodeFunctionData(
    functionFragment: "increment",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "increment_custom",
    values: [BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "decrement",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "decrement_custom",
    values: [BigNumberish]
  ): Uint8Array;

  decodeFunctionData(functionFragment: "count", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "increment",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "increment_custom",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "decrement",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "decrement_custom",
    data: BytesLike
  ): DecodedValue;
}

export class CounterAbi extends Contract {
  interface: CounterAbiInterface;
  functions: {
    count: InvokeFunction<[], BN>;

    increment: InvokeFunction<[], void>;

    increment_custom: InvokeFunction<[value: BigNumberish], void>;

    decrement: InvokeFunction<[], void>;

    decrement_custom: InvokeFunction<[value: BigNumberish], void>;
  };
}
